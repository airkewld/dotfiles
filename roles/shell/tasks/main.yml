---
- name: Check existence of fonts dir
  stat:
    path: "/tmp/fonts"
  register: powerline_fonts
  tags:
    - shell
    - always

# Install powerline fonts
- name: clone powerline fonts repo
  ansible.builtin.git:
    repo: 'https://github.com/powerline/fonts.git'
    dest: /tmp/fonts
  when: not powerline_fonts.stat.exists
  tags:
    - shell
    - always

# install fonts
- name: install powerline fonts
  ansible.builtin.shell: /tmp/fonts/install.sh
  when: not powerline_fonts.stat.exists
  tags:
    - shell
    - always

# tasks file for oh-my-zsh
- name: Check existence of oh-my-zsh directory
  stat:
    path: "~/.oh-my-zsh"
  register: oh_my_stats
  tags:
    - shell
    - always

- name: Fetch oh-my-zsh
  get_url:
    url: https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
    dest: /tmp/install-oh-my-zsh.sh
    mode: 0755
  when: not oh_my_stats.stat.exists
  tags:
    - shell
    - always

- name: Install oh-my-zsh
  command: zsh /tmp/install-oh-my-zsh.sh
  when: not oh_my_stats.stat.exists
  tags:
    - shell
    - always

- name: Copy shell config
  ansible.builtin.copy:
    src: zsh/zshrc
    dest: ~/.zshrc
    owner: "{{ ansible_user_id }}"
    mode: '0644'
    backup: yes
  tags:
    - shell
    - always

- name: Copy p10k config
  ansible.builtin.copy:
    src: zsh/p10k.zsh
    dest: ~/.p10k.zsh
    owner: "{{ ansible_user_id }}"
    mode: '0644'
  tags:
    - shell
    - always

- name: Install zsh-autosuggestions
  ansible.builtin.git:
    repo: 'https://github.com/zsh-users/zsh-autosuggestions.git'
    dest: "~/.oh-my-zsh/plugins/zsh-autosuggestions"
    force: true
  tags:
    - shell
    - always

- name: Install zsh-syntax-highlighting
  ansible.builtin.git:
    repo: 'https://github.com/zsh-users/zsh-syntax-highlighting'
    dest: "~/.oh-my-zsh/plugins/zsh-syntax-highlighting"
    force: true
  tags:
    - shell
    - always

- name: Add correct kube-ps1 source (apple silicon)
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    regexp: '###KUBE_PS1_SOURCE###'
    insertafter: '###KUBE_PS1_SOURCE###'
    line: source "/opt/homebrew/share/kube-ps1.sh"
  when: ansible_architecture == "arm64"
  tags:
    - shell
    - always

- name: Add correct kube-ps1 source (interl chip)
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    regexp: '###KUBE_PS1_SOURCE###'
    insertafter: '###KUBE_PS1_SOURCE###'
    line: source "/usr/local/opt/kube-ps1/share/kube-ps1.sh"
  when: ansible_architecture == "x86_64"
  tags:
    - shell
    - always

- name: Add correct p10k source (apple silicon)
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    regexp: '###P10K_SOURCE###'
    insertafter: '###P10K_SOURCE###'
    line: source /opt/homebrew/Cellar/powerlevel10k/1.19.0/powerlevel10k.zsh-theme
  when: ansible_architecture == "arm64"
  tags:
    - shell
    - always

- name: Add correct p10k source (intel chip)
  ansible.builtin.lineinfile:
    path: ~/.zshrc
    regexp: '###P10K_SOURCE###'
    insertafter: '###P10K_SOURCE###'
    line: source /usr/local/opt/powerlevel10k/powerlevel10k.zsh-theme
  when: ansible_architecture == "x86_64"
  tags:
    - shell
    - always
